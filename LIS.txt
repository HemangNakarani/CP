ll lis(vector<ll>& v , ll n)
{
    ll dp[n];

    for(int i=0;i<n;i++)
    {
        dp[i]=1;
        for(int j=i-1;j>=0;j--)
        {
            if(v[j]<=v[i])
            {
                dp[i]=max(dp[i],dp[j]+1);
            }
        }
    }

    return *max_element(dp,dp+n);
}


// LIS in NlogN
int main()
{
    int arr[] = {4, 4, 5, 7, 6};
    int n = 5;
    multiset<int> s;
    multiset<int>::iterator it;
    for(int i=0;i<n;i++)
    {
        s.insert(arr[i]);
        it = upper_bound(s.begin(), s.end(), arr[i]);
        if(it!=s.end()) 
            s.erase(it);
    }
    cout<<s.size()<<endl;
    return 0;
}
